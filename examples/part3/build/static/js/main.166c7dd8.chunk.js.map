{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","baseUrl","nonExisting","id","date","axios","get","then","respose","data","concat","noteObject","post","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","updatedNote","changedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","length","Date","toISOString","Math","random","console","log","returnedNote","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"kLAYeA,EAVF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,sBAAwB,oBACvD,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,QCA3BK,EALM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EAAyB,KACtB,qBAAKJ,UAAU,QAAf,SAAwBI,KCYlBC,EAdA,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,sG,gBCVAC,EAAU,aAkBD,EAhBA,WACb,IAAMC,EAAc,CAClBC,GAAI,IACJX,QAAS,mCACTY,KAAM,2BACNd,WAAW,GAEb,OAAOe,IAAMC,IAAIL,GAASM,MAAK,SAACC,GAAD,OAAaA,EAAQC,KAAKC,OAAOR,OASnD,EANA,SAACS,GAAD,OACbN,IAAMO,KAAKX,EAASU,GAAYJ,MAAK,SAACC,GAAD,OAAaA,EAAQC,SAK7C,EAHA,SAACN,EAAIQ,GAAL,OACbN,IAAMQ,IAAN,UAAaZ,EAAb,YAAwBE,GAAMQ,GAAYJ,MAAK,SAACC,GAAD,OAAaA,EAAQC,SCiEvDK,G,MA3EH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,cAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,4BAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,IAAqBlB,MAAK,SAACmB,GACzBT,EAASS,QAEV,IAEH,IAkCMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAACzC,GAAD,OAAUA,EAAKG,aAElE,OACE,gCACE,uCACA,cAAC,EAAD,CAAcK,QAAS2B,IACvB,8BACE,yBAAQ7B,QAAS,kBAAM4B,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGO,EAAYE,KAAI,SAAC1C,GAAD,OACf,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBA/BD,SAACe,GAC1B,IAAMhB,EAAO6B,EAAMc,MAAK,SAAC3C,GAAD,OAAUA,EAAKgB,KAAOA,KACxC4B,EAAW,2BAAQ5C,GAAR,IAAcG,WAAYH,EAAKG,YAChDmC,EACUtB,EAAI4B,GACXxB,MAAK,SAACyB,GAAD,OACJf,EAASD,EAAMa,KAAI,SAAC1C,GAAD,OAAWA,EAAKgB,KAAOA,EAAK6B,EAAc7C,SAE9D8C,OAAM,SAACC,GACNX,EAAgB,YAAD,OAAapB,EAAb,yCACfgC,YAAW,kBAAMZ,EAAgB,QAAO,KACxCN,EAASD,EAAMY,QAAO,SAACzC,GAAD,OAAUA,EAAKgB,KAAOA,SAoBhBiC,CAAmBjD,EAAKgB,MAF3ChB,EAAKgB,SAMhB,uBAAMkC,SAtDM,SAACC,GACfA,EAAMC,iBACN,IAAM5B,EAAa,CACjBR,GAAIa,EAAMwB,OAAS,EACnBhD,QAAS0B,EACTd,MAAM,IAAIqC,MAAOC,cACjBpD,UAAWqD,KAAKC,SAAW,IAE7BC,QAAQC,IAAInC,GACZc,EAAmBd,GAAYJ,MAAK,SAACwC,GACnC9B,EAASD,EAAMN,OAAOqC,IACtB5B,EAAW,QA2CX,UACE,uBAAO6B,MAAO9B,EAAS+B,SAxCJ,SAACX,GACxBnB,EAAWmB,EAAMY,OAAOF,UAwCpB,wBAAQG,KAAK,SAAb,qBAEF,cAAC,EAAD,SCzENC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.166c7dd8.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"mark as unimportant\" : \"mark as important\";\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) return null;\r\n  return <div className=\"error\">{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  const footerStyle = {\r\n    color: \"green\",\r\n    fontStyle: \"italic\",\r\n    fontSize: 16,\r\n  };\r\n  return (\r\n    <div style={footerStyle}>\r\n      <br />\r\n      <em>Note app, Department of Computer Science, University Of Helsinki</em>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import axios from \"axios\";\r\nconst baseUrl = \"/api/notes\";\r\n\r\nconst getAll = () => {\r\n  const nonExisting = {\r\n    id: 10000,\r\n    content: \"This note is not saved to server\",\r\n    date: \"2019-05-30T17:30:31.098Z\",\r\n    important: true,\r\n  };\r\n  return axios.get(baseUrl).then((respose) => respose.data.concat(nonExisting));\r\n};\r\n\r\nconst create = (noteObject) =>\r\n  axios.post(baseUrl, noteObject).then((respose) => respose.data);\r\n\r\nconst update = (id, noteObject) =>\r\n  axios.put(`${baseUrl}/${id}`, noteObject).then((respose) => respose.data);\r\n\r\nexport default {\r\n  getAll,\r\n  create,\r\n  update,\r\n};\r\n","import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport Notification from \"./components/Notification\";\nimport Footer from \"./components/Footer\";\nimport noteService from \"./services/notes\";\nimport \"./index.css\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"a new note\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(\"some error happened.....\");\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    const noteObject = {\n      id: notes.length + 1,\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n    console.log(noteObject);\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((note) => note.id === id);\n    const updatedNote = { ...note, important: !note.important };\n    noteService\n      .update(id, updatedNote)\n      .then((changedNote) =>\n        setNotes(notes.map((note) => (note.id === id ? changedNote : note)))\n      )\n      .catch((error) => {\n        setErrorMessage(`the note ${id} was already deleted from the server`);\n        setTimeout(() => setErrorMessage(null), 5000);\n        setNotes(notes.filter((note) => note.id !== id));\n      });\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}